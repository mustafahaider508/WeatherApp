{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/my-app/src/Components/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./WeatherApp.css\";\nimport WeatherType from './WeatherType';\nimport WeatherCard from './WeatherCard';\nimport WeatherComp from \"./WeatherComp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction WeatherApp(props) {\n  _s();\n\n  const [weatherForcast, setweatherForcast] = useState();\n  const [input, setinput] = useState(\"Peshawar\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [weatherIcon, setweatherIcon] = useState(\"\");\n\n  const WeatherInfo_Forcast = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/onecall?lat=34.025917&lon=71.560135&exclude=hourly,minutely&appid=fc4f7b08db5ab23438b8c846324420d6`;\n      let res = await fetch(url);\n      let data = await res.json();\n      console.log(data); // console.log(daysofWeek[new Date(data.daily[1].dt).getDay()]); \n\n      const min = parseFloat(data.daily[0].temp.min - 273.15).toFixed(0);\n      const max = parseFloat(data.daily[0].temp.max - 273.15).toFixed(0);\n      const icon = data.daily[0].weather[0].icon;\n      const min1 = parseFloat(data.daily[1].temp.min - 273.15).toFixed(0);\n      const max1 = parseFloat(data.daily[1].temp.max - 273.15).toFixed(0);\n      const icon1 = data.daily[1].weather[0].icon;\n      const min2 = parseFloat(data.daily[2].temp.min - 273.15).toFixed(0);\n      const max2 = parseFloat(data.daily[2].temp.max - 273.15).toFixed(0);\n      const icon2 = data.daily[2].weather[0].icon;\n      const min3 = parseFloat(data.daily[3].temp.min - 273.15).toFixed(0);\n      const max3 = parseFloat(data.daily[3].temp.max - 273.15).toFixed(0);\n      const icon3 = data.daily[3].weather[0].icon;\n      const min4 = parseFloat(data.daily[4].temp.min - 273.15).toFixed(0);\n      const max4 = parseFloat(data.daily[4].temp.max - 273.15).toFixed(0);\n      const icon4 = data.daily[4].weather[0].icon;\n      const min5 = parseFloat(data.daily[5].temp.min - 273.15).toFixed(0);\n      const max5 = parseFloat(data.daily[5].temp.max - 273.15).toFixed(0);\n      const icon5 = data.daily[5].weather[0].icon;\n      const min6 = parseFloat(data.daily[6].temp.min - 273.15).toFixed(0);\n      const max6 = parseFloat(data.daily[6].temp.max - 273.15).toFixed(0);\n      const icon6 = data.daily[6].weather[0].icon;\n      const newData = {\n        min,\n        max,\n        min1,\n        max1,\n        min2,\n        max2,\n        min3,\n        max3,\n        min4,\n        max4,\n        min5,\n        max5,\n        min6,\n        max6,\n        icon,\n        icon1,\n        icon2,\n        icon3,\n        icon4,\n        icon5,\n        icon6\n      };\n      setweatherForcast(newData);\n    } catch (error) {}\n  }; // Search by  city Api\n\n\n  const WeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&appid=dccc147924a249b664ad69142ad0396b`;\n      let res = await fetch(url);\n      let data = await res.json();\n      console.log(data);\n      const temp = parseFloat(data.main.temp).toFixed(0);\n      const min = parseFloat(data.main.temp_min).toFixed(0);\n      const max = parseFloat(data.main.temp_max).toFixed(0);\n      const feels_like = parseFloat(data.main.feels_like).toFixed(0);\n      const {\n        pressure,\n        humidity\n      } = data.main;\n      const {\n        main\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country\n      } = data.sys;\n      const sunrise = new Date(data.sys.sunrise * 1000).toLocaleTimeString();\n      const sunset = new Date(data.sys.sunset * 1000).toLocaleTimeString();\n      const visibility = data.visibility / 1000;\n\n      switch (main) {\n        case \"Clouds\":\n          document.getElementById(\"wraper-img\").style.backgroundImage = \"url('snow.gif')\";\n          break;\n\n        case \"Haze\":\n          document.getElementById(\"wraper-img\").style.backgroundImage = \"url('clouds.gif')\";\n          break;\n\n        case \"Clear\":\n          document.getElementById(\"wraper-img\").style.backgroundImage = \"url('clear.gif')\";\n          break;\n\n        case \"snow\":\n          document.getElementById(\"wraper-img\").style.backgroundImage = \"url('snow.gif')\";\n          break;\n\n        case \"rain\":\n          document.getElementById(\"wraper-img\").style.backgroundImage = \"url('rain.gif')\";\n          break;\n\n        default:\n          document.getElementById(\"wraper-img\").style.backgroundImage = \"url('clear.gif')\";\n          break;\n      }\n\n      const newData1 = {\n        country,\n        temp,\n        pressure,\n        humidity,\n        main,\n        name,\n        speed,\n        sunset,\n        min,\n        max,\n        sunrise,\n        feels_like,\n        visibility\n      };\n      setTempInfo(newData1);\n      console.log(main);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    WeatherInfo_Forcast();\n    WeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wraper-img\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hearder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"  search...\",\n            autoFocus: true,\n            id: \"search\",\n            className: \"search\",\n            value: input,\n            onChange: e => setinput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: WeatherInfo,\n            className: \"button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: \"black\"\n          },\n          className: `wi ${weatherIcon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(WeatherCard, { ...tempInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WeatherType, { ...weatherForcast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WeatherComp, { ...tempInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(WeatherApp, \"1ypeHnCga6UDVyCzoDkenhU1+yA=\");\n\n_c = WeatherApp;\nexport default WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/mac/Desktop/my-app/src/Components/WeatherApp.js"],"names":["React","useEffect","useState","WeatherType","WeatherCard","WeatherComp","WeatherApp","props","weatherForcast","setweatherForcast","input","setinput","tempInfo","setTempInfo","weatherIcon","setweatherIcon","WeatherInfo_Forcast","url","res","fetch","data","json","console","log","min","parseFloat","daily","temp","toFixed","max","icon","weather","min1","max1","icon1","min2","max2","icon2","min3","max3","icon3","min4","max4","icon4","min5","max5","icon5","min6","max6","icon6","newData","error","WeatherInfo","main","temp_min","temp_max","feels_like","pressure","humidity","name","speed","wind","country","sys","sunrise","Date","toLocaleTimeString","sunset","visibility","document","getElementById","style","backgroundImage","newData1","e","target","value","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAK,CAACC,cAAD,EAAgBC,iBAAhB,IAAqCP,QAAQ,EAAlD;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,UAAD,CAAjC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACY,WAAD,EAAaC,cAAb,IAA+Bb,QAAQ,CAAC,EAAD,CAA7C;;AAIA,QAAMc,mBAAmB,GAAG,YAAW;AACnC,QAAI;AACA,UAAIC,GAAG,GAAI,4IAAX;AACA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJA,CAKA;;AAEA,YAAMI,GAAG,GAAGC,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAZ;AACA,YAAMC,GAAG,GAAGJ,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAZ;AACA,YAAME,IAAI,GAAGV,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAtC;AACA,YAAME,IAAI,GAAGP,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMK,IAAI,GAAGR,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMM,KAAK,GAAGd,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAvC;AACA,YAAMK,IAAI,GAAGV,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMQ,IAAI,GAAGX,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMS,KAAK,GAAGjB,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAvC;AACA,YAAMQ,IAAI,GAAGb,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMW,IAAI,GAAGd,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMY,KAAK,GAAGpB,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAvC;AACA,YAAMW,IAAI,GAAGhB,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMc,IAAI,GAAGjB,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMe,KAAK,GAAGvB,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAvC;AACA,YAAMc,IAAI,GAAGnB,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMiB,IAAI,GAAGpB,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMkB,KAAK,GAAG1B,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAvC;AACA,YAAMiB,IAAI,GAAGtB,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBH,GAAnB,GAAyB,MAA1B,CAAV,CAA4CI,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMoB,IAAI,GAAGvB,UAAU,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBE,GAAnB,GAAyB,MAA1B,CAAV,CAA4CD,OAA5C,CAAoD,CAApD,CAAb;AACA,YAAMqB,KAAK,GAAG7B,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcK,OAAd,CAAsB,CAAtB,EAAyBD,IAAvC;AAGA,YAAMoB,OAAO,GAAG;AACb1B,QAAAA,GADa;AACTK,QAAAA,GADS;AACLG,QAAAA,IADK;AACAC,QAAAA,IADA;AACKE,QAAAA,IADL;AACUC,QAAAA,IADV;AACeE,QAAAA,IADf;AACoBC,QAAAA,IADpB;AACyBE,QAAAA,IADzB;AAC8BC,QAAAA,IAD9B;AACmCE,QAAAA,IADnC;AACwCC,QAAAA,IADxC;AAC6CE,QAAAA,IAD7C;AACkDC,QAAAA,IADlD;AAEblB,QAAAA,IAFa;AAERI,QAAAA,KAFQ;AAEFG,QAAAA,KAFE;AAEIG,QAAAA,KAFJ;AAEUG,QAAAA,KAFV;AAEgBG,QAAAA,KAFhB;AAEsBG,QAAAA;AAFtB,OAAhB;AAIAxC,MAAAA,iBAAiB,CAACyC,OAAD,CAAjB;AACH,KAnCD,CAmCE,OAAOC,KAAP,EAAc,CAEf;AAMJ,GA5CD,CATuB,CAuD3B;;;AACA,QAAMC,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,UAAInC,GAAG,GAAI,qDAAoDP,KAAM,sDAArE;AACA,UAAIQ,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,YAAMO,IAAI,GAAGF,UAAU,CAACL,IAAI,CAACiC,IAAL,CAAU1B,IAAX,CAAV,CAA2BC,OAA3B,CAAmC,CAAnC,CAAb;AACA,YAAMJ,GAAG,GAAGC,UAAU,CAACL,IAAI,CAACiC,IAAL,CAAUC,QAAX,CAAV,CAA+B1B,OAA/B,CAAuC,CAAvC,CAAZ;AACA,YAAMC,GAAG,GAAGJ,UAAU,CAACL,IAAI,CAACiC,IAAL,CAAUE,QAAX,CAAV,CAA+B3B,OAA/B,CAAuC,CAAvC,CAAZ;AACA,YAAM4B,UAAU,GAAG/B,UAAU,CAACL,IAAI,CAACiC,IAAL,CAAUG,UAAX,CAAV,CAAiC5B,OAAjC,CAAyC,CAAzC,CAAnB;AACA,YAAM;AAAC6B,QAAAA,QAAD;AAAUC,QAAAA;AAAV,UAAsBtC,IAAI,CAACiC,IAAjC;AACA,YAAM;AAAEA,QAAAA;AAAF,UAAUjC,IAAI,CAACW,OAAL,CAAa,CAAb,CAAhB;AACA,YAAM;AAAE4B,QAAAA;AAAF,UAAWvC,IAAjB;AACA,YAAM;AAAEwC,QAAAA;AAAF,UAAYxC,IAAI,CAACyC,IAAvB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAc1C,IAAI,CAAC2C,GAAzB;AACA,YAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS7C,IAAI,CAAC2C,GAAL,CAASC,OAAT,GAAmB,IAA5B,EAAmCE,kBAAnC,EAAhB;AACA,YAAMC,MAAM,GAAG,IAAIF,IAAJ,CAAS7C,IAAI,CAAC2C,GAAL,CAASI,MAAT,GAAkB,IAA3B,EAAkCD,kBAAlC,EAAf;AACA,YAAME,UAAU,GAAGhD,IAAI,CAACgD,UAAL,GAAkB,IAArC;;AAGI,cAAQf,IAAR;AACE,aAAK,QAAL;AACEgB,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,eAA5C,GACA,iBADA;AAEA;;AACF,aAAK,MAAL;AACEH,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,eAA5C,GACA,mBADA;AAEA;;AACF,aAAK,OAAL;AACEH,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,eAA5C,GACA,kBADA;AAEA;;AACF,aAAK,MAAL;AACEH,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,eAA5C,GACA,iBADA;AAEA;;AACA,aAAK,MAAL;AACAH,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,eAA5C,GACA,iBADA;AAEA;;AAEF;AACEH,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4CC,eAA5C,GACA,kBADA;AAEA;AAzBJ;;AA8BJ,YAAMC,QAAQ,GAAG;AACbX,QAAAA,OADa;AACLnC,QAAAA,IADK;AACA8B,QAAAA,QADA;AACSC,QAAAA,QADT;AACkBL,QAAAA,IADlB;AACuBM,QAAAA,IADvB;AAC4BC,QAAAA,KAD5B;AACkCO,QAAAA,MADlC;AACyC3C,QAAAA,GADzC;AAC6CK,QAAAA,GAD7C;AACiDmC,QAAAA,OADjD;AACyDR,QAAAA,UADzD;AACoEY,QAAAA;AADpE,OAAjB;AAIAvD,MAAAA,WAAW,CAAC4D,QAAD,CAAX;AACDnD,MAAAA,OAAO,CAACC,GAAR,CAAY8B,IAAZ;AAEF,KAzDD,CAyDE,OAAOF,KAAP,EAAc,CAEf;AAIJ,GAhED;;AAoEIlD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,mBAAmB;AACnBoC,IAAAA,WAAW;AAEd,GAJQ,EAIN,EAJM,CAAT;AAQA,sBACI;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCAEA;AACC,YAAA,IAAI,EAAC,QADN;AAEC,YAAA,WAAW,EAAC,aAFb;AAGC,YAAA,SAAS,MAHV;AAIC,YAAA,EAAE,EAAC,QAJJ;AAKC,YAAA,SAAS,EAAC,QALX;AAMC,YAAA,KAAK,EAAE1C,KANR;AAOC,YAAA,QAAQ,EAAGgE,CAAD,IAAO/D,QAAQ,CAAC+D,CAAC,CAACC,MAAF,CAASC,KAAV;AAP1B;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,gBADA,eAaI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACA;AAAS,YAAA,OAAO,EAAExB,WAAlB;AAA+B,YAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAmBK;AAAA,gCACA;AAAG,UAAA,KAAK,EAAE;AAACyB,YAAAA,KAAK,EAAC;AAAP,WAAV;AAA2B,UAAA,SAAS,EAAG,MAAK/D,WAAY;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI,QAAC,WAAD,OAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBL,eAwBK;AAAA,+BACI,QAAC,WAAD,OAAkBJ;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxBL,eA4BQ;AAAA,+BACI,QAAC,WAAD,OAAiBI;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAqCH;;GAzKQN,U;;KAAAA,U;AA2KT,eAAeA,UAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport \"./WeatherApp.css\";\nimport WeatherType from './WeatherType';\nimport WeatherCard from './WeatherCard';\nimport WeatherComp from \"./WeatherComp\"\n\n\nfunction WeatherApp(props) {\n    const[weatherForcast,setweatherForcast] = useState();\n    const [input,setinput] = useState(\"Peshawar\");\n    const [tempInfo, setTempInfo] = useState({});\n\n    const [weatherIcon,setweatherIcon] = useState(\"\");\n    \n    \n\n    const WeatherInfo_Forcast = async() => {\n        try {\n            let url = `https://api.openweathermap.org/data/2.5/onecall?lat=34.025917&lon=71.560135&exclude=hourly,minutely&appid=fc4f7b08db5ab23438b8c846324420d6`\n            let res = await fetch(url);\n            let data = await res.json();\n            console.log(data)\n            // console.log(daysofWeek[new Date(data.daily[1].dt).getDay()]); \n\n            const min = parseFloat(data.daily[0].temp.min - 273.15).toFixed(0);\n            const max = parseFloat(data.daily[0].temp.max - 273.15).toFixed(0);\n            const icon = data.daily[0].weather[0].icon;\n            const min1 = parseFloat(data.daily[1].temp.min - 273.15).toFixed(0);\n            const max1 = parseFloat(data.daily[1].temp.max - 273.15).toFixed(0);\n            const icon1 = data.daily[1].weather[0].icon;\n            const min2 = parseFloat(data.daily[2].temp.min - 273.15).toFixed(0);\n            const max2 = parseFloat(data.daily[2].temp.max - 273.15).toFixed(0);\n            const icon2 = data.daily[2].weather[0].icon;\n            const min3 = parseFloat(data.daily[3].temp.min - 273.15).toFixed(0);\n            const max3 = parseFloat(data.daily[3].temp.max - 273.15).toFixed(0);\n            const icon3 = data.daily[3].weather[0].icon;\n            const min4 = parseFloat(data.daily[4].temp.min - 273.15).toFixed(0);\n            const max4 = parseFloat(data.daily[4].temp.max - 273.15).toFixed(0);\n            const icon4 = data.daily[4].weather[0].icon;\n            const min5 = parseFloat(data.daily[5].temp.min - 273.15).toFixed(0);\n            const max5 = parseFloat(data.daily[5].temp.max - 273.15).toFixed(0);\n            const icon5 = data.daily[5].weather[0].icon;\n            const min6 = parseFloat(data.daily[6].temp.min - 273.15).toFixed(0);\n            const max6 = parseFloat(data.daily[6].temp.max - 273.15).toFixed(0);\n            const icon6 = data.daily[6].weather[0].icon;\n\n       \n            const newData = {\n               min,max,min1,max1,min2,max2,min3,max3,min4,max4,min5,max5,min6,max6,\n               icon,icon1,icon2,icon3,icon4,icon5,icon6\n            }\n            setweatherForcast(newData);          \n        } catch (error) {\n            \n        }\n\n\n         \n\n        \n    }\n\n// Search by  city Api\nconst WeatherInfo = async() => {\n    try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&appid=dccc147924a249b664ad69142ad0396b`\n        let res = await fetch(url);\n        let data = await res.json();\n        console.log(data);\n\n        const temp = parseFloat(data.main.temp).toFixed(0);\n        const min = parseFloat(data.main.temp_min).toFixed(0);\n        const max = parseFloat(data.main.temp_max).toFixed(0);\n        const feels_like = parseFloat(data.main.feels_like).toFixed(0);\n        const {pressure,humidity} = data.main;\n        const { main} = data.weather[0];\n        const { name } = data;\n        const { speed } = data.wind;\n        const { country } = data.sys;\n        const sunrise = new Date(data.sys.sunrise * 1000 ).toLocaleTimeString();\n        const sunset = new Date(data.sys.sunset * 1000 ).toLocaleTimeString();\n        const visibility = data.visibility / 1000;\n    \n       \n            switch (main) {\n              case \"Clouds\":\n                document.getElementById(\"wraper-img\").style.backgroundImage =\n                \"url('snow.gif')\";\n                break;\n              case \"Haze\":\n                document.getElementById(\"wraper-img\").style.backgroundImage =\n                \"url('clouds.gif')\";\n                break;\n              case \"Clear\":\n                document.getElementById(\"wraper-img\").style.backgroundImage =\n                \"url('clear.gif')\";\n                break;\n              case \"snow\":\n                document.getElementById(\"wraper-img\").style.backgroundImage =\n                \"url('snow.gif')\";\n                break;\n                case \"rain\":\n                document.getElementById(\"wraper-img\").style.backgroundImage =\n                \"url('rain.gif')\";\n                break;\n      \n              default:\n                document.getElementById(\"wraper-img\").style.backgroundImage =\n                \"url('clear.gif')\";\n                break;\n            }\n          \n        \n            \n        const newData1 = {\n            country,temp,pressure,humidity,main,name,speed,sunset,min,max,sunrise,feels_like,visibility\n\n        }\n        setTempInfo(newData1);\n       console.log(main);\n        \n    } catch (error) {\n        \n    }\n    \n\n\n}\n\n\n\n    useEffect(() => {\n        WeatherInfo_Forcast();  \n        WeatherInfo();\n               \n    }, [])\n\n\n  \n    return (\n        <>\n          <div id=\"wraper-img\">\n           <div className=\"hearder\">\n           <div className=\"search-bar\">\n          \n           <input\n            type=\"search\"\n            placeholder=\"  search...\"\n            autoFocus\n            id=\"search\"\n            className=\"search\"\n            value={input}\n            onChange={(e) => setinput(e.target.value)}\n         />  \n               </div> \n               <div className=\"button-div\">\n               <button  onClick={WeatherInfo} className=\"button\" >Search</button>\n               </div>\n               </div>\n\n               <div>\n               <i style={{color:\"black\"}} className={`wi ${weatherIcon}`}></i>\n                   <WeatherCard {...tempInfo} />\n                   </div>\n\n               <div>\n                   <WeatherType  {...weatherForcast}/>\n               </div>\n    \n                  <div>\n                      <WeatherComp {...tempInfo} />\n                  </div>\n                  </div>\n         \n        </>\n    )\n}\n\nexport default WeatherApp\n"]},"metadata":{},"sourceType":"module"}