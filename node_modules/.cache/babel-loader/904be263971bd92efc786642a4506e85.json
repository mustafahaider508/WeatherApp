{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/my-app/src/Components/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport \"./WeatherApp.css\";\nimport WeatherType from './WeatherType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction WeatherApp(props) {\n  _s();\n\n  const [weatherForcast, setweatherForcast] = useState();\n\n  const WeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/onecall?lat=34.025917&lon=71.560135&exclude=hourly,minutely&appid=fc4f7b08db5ab23438b8c846324420d6`;\n      let res = await fetch(url);\n      let data = await res.json(); // console.log(data);\n\n      const min = data.daily[0].temp.min;\n      const max = data.daily[0].temp.max;\n      const min1 = data.daily[1].temp.min;\n      const max1 = data.daily[1].temp.max;\n      const newData = {\n        min,\n        max,\n        min1,\n        max1\n      };\n      setweatherForcast(newData);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    WeatherInfo();\n  }, []);\n  console.log(weatherForcast);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hearder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          className: \"search-Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search...\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-div\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: WeatherInfo,\n          className: \"button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WeatherType, { ...weatherForcast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WeatherApp, \"AEVhLdGd/DfyEGPNlvlu7WZ9XmY=\");\n\n_c = WeatherApp;\nexport default WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/mac/Desktop/my-app/src/Components/WeatherApp.js"],"names":["React","useEffect","useState","SearchIcon","WeatherType","WeatherApp","props","weatherForcast","setweatherForcast","WeatherInfo","url","res","fetch","data","json","min","daily","temp","max","min1","max1","newData","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAK,CAACC,cAAD,EAAgBC,iBAAhB,IAAqCN,QAAQ,EAAlD;;AAIA,QAAMO,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,UAAIC,GAAG,GAAI,4IAAX;AACA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB,CAHA,CAIA;;AAKA,YAAMC,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBF,GAA/B;AACA,YAAMG,GAAG,GAAGL,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBC,GAA/B;AACA,YAAMC,IAAI,GAAGN,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBF,GAAhC;AACA,YAAMK,IAAI,GAAGP,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,IAAd,CAAmBC,GAAhC;AAGA,YAAMG,OAAO,GAAG;AACbN,QAAAA,GADa;AACTG,QAAAA,GADS;AACLC,QAAAA,IADK;AACAC,QAAAA;AADA,OAAhB;AAIAZ,MAAAA,iBAAiB,CAACa,OAAD,CAAjB;AAIH,KAvBD,CAuBE,OAAOC,KAAP,EAAc,CAEf;AAEJ,GA5BD;;AA8BArB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW;AAEd,GAHQ,EAGN,EAHM,CAAT;AAMCc,EAAAA,OAAO,CAACC,GAAR,CAAYjB,cAAZ;AAGD,sBACI;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC,QAAC,UAAD;AAAa,UAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADD,eAEA;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,WAAW,EAAC,WAFb;AAGC,UAAA,SAAS,MAHV;AAIC,UAAA,EAAE,EAAC,QAJJ;AAKC,UAAA,SAAS,EAAC;AALX;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAWI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACA;AAAQ,UAAA,OAAO,EAAEE,WAAjB;AAA8B,UAAA,SAAS,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAiBO;AAAA,6BACI,QAAC,WAAD,OAAkBF;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBP;AAAA,kBADJ;AA0BH;;GAtEQF,U;;KAAAA,U;AAwET,eAAeA,UAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport \"./WeatherApp.css\";\nimport WeatherType from './WeatherType';\n\n\nfunction WeatherApp(props) {\n    const[weatherForcast,setweatherForcast] = useState();\n\n\n\n    const WeatherInfo = async() => {\n        try {\n            let url = `https://api.openweathermap.org/data/2.5/onecall?lat=34.025917&lon=71.560135&exclude=hourly,minutely&appid=fc4f7b08db5ab23438b8c846324420d6`\n            let res = await fetch(url);\n            let data = await res.json();\n            // console.log(data);\n\n\n            \n        \n            const min = data.daily[0].temp.min;\n            const max = data.daily[0].temp.max;\n            const min1 = data.daily[1].temp.min;\n            const max1 = data.daily[1].temp.max;\n           \n                \n            const newData = {\n               min,max,min1,max1\n            }\n\n            setweatherForcast(newData);\n\n        \n            \n        } catch (error) {\n            \n        }\n\n    }\n\n    useEffect(() => {\n        WeatherInfo();\n       \n    }, [])\n\n    \n     console.log(weatherForcast);\n\n\n    return (\n        <>\n           <div className=\"hearder\">\n           <div className=\"search-bar\">\n            <SearchIcon  className=\"search-Icon\"/>\n           <input\n            type=\"search\"\n            placeholder=\"search...\"\n            autoFocus\n            id=\"search\"\n            className=\"search\"\n         />  \n               </div> \n               <div className=\"button-div\">\n               <button onClick={WeatherInfo} className=\"button\" >Search</button>\n               </div>\n               </div>\n\n               <div>\n                   <WeatherType  {...weatherForcast}/>\n               </div>\n    \n           \n         \n        </>\n    )\n}\n\nexport default WeatherApp\n"]},"metadata":{},"sourceType":"module"}